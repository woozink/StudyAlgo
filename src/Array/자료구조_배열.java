package Array;

public class 자료구조_배열 {

    /*
        데이터를 나열하고, 각 데이터를 인덱스에 대응하도록 구성한 데이터 구조

        배열은 왜 필요할까?

        1. 같은 종류의 데이터를 효율적으로 관리하기 위해 사용
        2. 같은 종류의 데이터를 순차적으로 저장
        장점 : 빠른 접근 가능 -> 첫 데이터의 위치에서 상대적인 위치로 데이터 접근(인덱스 번호로 접근) 바로 접근
        단점 : 데이터 추가/삭제의 어려움-> 미리 최대의 길이를 저장해야한다.

        Primitive 자료형과 Wrapper 클래스

        Java에서는 int와 Integer같이 자료형이 나누어져 있음
        Integer와 같은 Wrapper 클래스가 다음과 같은 이유로 사용되며, 가급적 복잡도를 낮추기 위해
        primitive와 혼용하기 보다는 주로 Wrapper 클래스를 사용하기로함
        null을 용이하게 처리할 수 있다.
        ArrayList 등 객체만을 핸들링하는 기능을 사용하기 위해서


        List는 인터페이스고 , ArrayList는 클래스이다.
            클래스는 크게 일반 클래스와 클래스 내에 '추상 메서드'가 하나 이상 있거나, abstract로 정의된 추상 클래스로 나뉜다.
            인터페이슨느 모든 메서드가 추상 메서드인 경우를 의미하며 인터페이스를 상속받는 클래스는 인터페이스에서 정의된 추상 메서드를 모두 구현
            해야한다. (따라서 다양한 클래스를 상속 받는 특정 인터페이스는 결국 동일한 메서드를 제공한다.)

            ArrayList가 아니라, List로 선언되 변수는 다음과 같이 필요에 따라 다른 리스트 클래스를 쓸 수 있는 구현상의 유연성을 제공한다.

     */
}
